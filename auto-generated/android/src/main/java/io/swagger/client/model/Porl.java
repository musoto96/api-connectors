/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.math.BigDecimal;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Proof of Reserves/Liabilities
 **/
@ApiModel(description = "Proof of Reserves/Liabilities")
public class Porl {
  
  @SerializedName("account")
  private BigDecimal account = null;
  @SerializedName("nonce")
  private String nonce = null;
  @SerializedName("accountNonce")
  private String accountNonce = null;
  @SerializedName("total")
  private Double total = null;
  @SerializedName("balance")
  private Double balance = null;
  @SerializedName("filename")
  private String filename = null;
  @SerializedName("height")
  private Double height = null;
  @SerializedName("created")
  private Date created = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAccount() {
    return account;
  }
  public void setAccount(BigDecimal account) {
    this.account = account;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getNonce() {
    return nonce;
  }
  public void setNonce(String nonce) {
    this.nonce = nonce;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getAccountNonce() {
    return accountNonce;
  }
  public void setAccountNonce(String accountNonce) {
    this.accountNonce = accountNonce;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Double getTotal() {
    return total;
  }
  public void setTotal(Double total) {
    this.total = total;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Double getBalance() {
    return balance;
  }
  public void setBalance(Double balance) {
    this.balance = balance;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getFilename() {
    return filename;
  }
  public void setFilename(String filename) {
    this.filename = filename;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Double getHeight() {
    return height;
  }
  public void setHeight(Double height) {
    this.height = height;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getCreated() {
    return created;
  }
  public void setCreated(Date created) {
    this.created = created;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Porl porl = (Porl) o;
    return (this.account == null ? porl.account == null : this.account.equals(porl.account)) &&
        (this.nonce == null ? porl.nonce == null : this.nonce.equals(porl.nonce)) &&
        (this.accountNonce == null ? porl.accountNonce == null : this.accountNonce.equals(porl.accountNonce)) &&
        (this.total == null ? porl.total == null : this.total.equals(porl.total)) &&
        (this.balance == null ? porl.balance == null : this.balance.equals(porl.balance)) &&
        (this.filename == null ? porl.filename == null : this.filename.equals(porl.filename)) &&
        (this.height == null ? porl.height == null : this.height.equals(porl.height)) &&
        (this.created == null ? porl.created == null : this.created.equals(porl.created));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.account == null ? 0: this.account.hashCode());
    result = 31 * result + (this.nonce == null ? 0: this.nonce.hashCode());
    result = 31 * result + (this.accountNonce == null ? 0: this.accountNonce.hashCode());
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.balance == null ? 0: this.balance.hashCode());
    result = 31 * result + (this.filename == null ? 0: this.filename.hashCode());
    result = 31 * result + (this.height == null ? 0: this.height.hashCode());
    result = 31 * result + (this.created == null ? 0: this.created.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Porl {\n");
    
    sb.append("  account: ").append(account).append("\n");
    sb.append("  nonce: ").append(nonce).append("\n");
    sb.append("  accountNonce: ").append(accountNonce).append("\n");
    sb.append("  total: ").append(total).append("\n");
    sb.append("  balance: ").append(balance).append("\n");
    sb.append("  filename: ").append(filename).append("\n");
    sb.append("  height: ").append(height).append("\n");
    sb.append("  created: ").append(created).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

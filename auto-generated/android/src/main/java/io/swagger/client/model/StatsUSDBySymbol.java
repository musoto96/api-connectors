/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class StatsUSDBySymbol {
  
  @SerializedName("symbol")
  private String symbol = null;
  @SerializedName("currency")
  private String currency = null;
  @SerializedName("turnover24h")
  private BigDecimal turnover24h = null;
  @SerializedName("turnover30d")
  private BigDecimal turnover30d = null;
  @SerializedName("turnover365d")
  private BigDecimal turnover365d = null;
  @SerializedName("turnover")
  private BigDecimal turnover = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getSymbol() {
    return symbol;
  }
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTurnover24h() {
    return turnover24h;
  }
  public void setTurnover24h(BigDecimal turnover24h) {
    this.turnover24h = turnover24h;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTurnover30d() {
    return turnover30d;
  }
  public void setTurnover30d(BigDecimal turnover30d) {
    this.turnover30d = turnover30d;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTurnover365d() {
    return turnover365d;
  }
  public void setTurnover365d(BigDecimal turnover365d) {
    this.turnover365d = turnover365d;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTurnover() {
    return turnover;
  }
  public void setTurnover(BigDecimal turnover) {
    this.turnover = turnover;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatsUSDBySymbol statsUSDBySymbol = (StatsUSDBySymbol) o;
    return (this.symbol == null ? statsUSDBySymbol.symbol == null : this.symbol.equals(statsUSDBySymbol.symbol)) &&
        (this.currency == null ? statsUSDBySymbol.currency == null : this.currency.equals(statsUSDBySymbol.currency)) &&
        (this.turnover24h == null ? statsUSDBySymbol.turnover24h == null : this.turnover24h.equals(statsUSDBySymbol.turnover24h)) &&
        (this.turnover30d == null ? statsUSDBySymbol.turnover30d == null : this.turnover30d.equals(statsUSDBySymbol.turnover30d)) &&
        (this.turnover365d == null ? statsUSDBySymbol.turnover365d == null : this.turnover365d.equals(statsUSDBySymbol.turnover365d)) &&
        (this.turnover == null ? statsUSDBySymbol.turnover == null : this.turnover.equals(statsUSDBySymbol.turnover));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.symbol == null ? 0: this.symbol.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    result = 31 * result + (this.turnover24h == null ? 0: this.turnover24h.hashCode());
    result = 31 * result + (this.turnover30d == null ? 0: this.turnover30d.hashCode());
    result = 31 * result + (this.turnover365d == null ? 0: this.turnover365d.hashCode());
    result = 31 * result + (this.turnover == null ? 0: this.turnover.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatsUSDBySymbol {\n");
    
    sb.append("  symbol: ").append(symbol).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  turnover24h: ").append(turnover24h).append("\n");
    sb.append("  turnover30d: ").append(turnover30d).append("\n");
    sb.append("  turnover365d: ").append(turnover365d).append("\n");
    sb.append("  turnover: ").append(turnover).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

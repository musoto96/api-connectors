/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.api

import io.swagger.client.model.Address
import io.swagger.client.model.Error
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AddressApi {

  /**
   * 
   * 
   * Expected answers:
   *   code 200 : Seq[Address] (Request was successful)
   *   code 400 : Error (Parameter Error)
   *   code 401 : Error (Unauthorized)
   *   code 403 : Error (Access Denied)
   *   code 404 : Error (Not Found)
   * 
   * Available security schemes:
   *   apiExpires (apiKey)
   *   apiKey (apiKey)
   *   apiSignature (apiKey)
   */
  def address.get()(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[Seq[Address]] =
    ApiRequest[Seq[Address]](ApiMethods.GET, "https://www.bitmex.com/api/v1", "/address", "application/json")
      .withApiKey(apiKey, "api-expires", HEADER)
      .withApiKey(apiKey, "api-key", HEADER)
      .withApiKey(apiKey, "api-signature", HEADER)
      .withSuccessResponse[Seq[Address]](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
        /**
   * 
   * 
   * Expected answers:
   *   code 200 : Address (Request was successful)
   *   code 400 : Error (Parameter Error)
   *   code 401 : Error (Unauthorized)
   *   code 403 : Error (Access Denied)
   *   code 404 : Error (Not Found)
   * 
   * Available security schemes:
   *   apiExpires (apiKey)
   *   apiKey (apiKey)
   *   apiSignature (apiKey)
   * 
   * @param currency Currency of the address. Options: &#x60;XBt&#x60;, &#x60;USDt&#x60;
   * @param network Selected network.
   * @param address Destination Address.
   * @param name Name of the entry, eg. &#39;Hardware wallet&#39;.
   * @param note Optional annotation.
   * @param skipConfirm Skip e-mail confirmations for transfers to this address. Will require an email confirmation after creation.
   * @param skip2FA Skip 2FA confirmations for transfers to this address. Will require an email confirmation after creation.
   */
  def address.new(currency: String, network: String, address: String, name: String, note: Option[String] = None, skipConfirm: Option[Boolean], skip2FA: Option[Boolean])(implicit apiKey: ApiKeyValue, apiKey: ApiKeyValue, apiKey: ApiKeyValue): ApiRequest[Address] =
    ApiRequest[Address](ApiMethods.POST, "https://www.bitmex.com/api/v1", "/address", "application/json")
      .withApiKey(apiKey, "api-expires", HEADER)
      .withApiKey(apiKey, "api-key", HEADER)
      .withApiKey(apiKey, "api-signature", HEADER)
      .withFormParam("currency", currency)
      .withFormParam("network", network)
      .withFormParam("address", address)
      .withFormParam("name", name)
      .withFormParam("note", note)
      .withFormParam("skipConfirm", skipConfirm)
      .withFormParam("skip2FA", skip2FA)
      .withSuccessResponse[Address](200)
      .withErrorResponse[Error](400)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      

}


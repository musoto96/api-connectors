/**
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.38-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CollateralSupportAgreement.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_CollateralSupportAgreement_H_
#define IO_SWAGGER_CLIENT_MODEL_CollateralSupportAgreement_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  CollateralSupportAgreement
    : public ModelBase
{
public:
    CollateralSupportAgreement();
    virtual ~CollateralSupportAgreement();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CollateralSupportAgreement members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCsaID() const;
        void setCsaID(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getAccount() const;
    bool accountIsSet() const;
    void unsetAccount();
    void setAccount(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();
    void setCurrency(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getAmount() const;
    bool amountIsSet() const;
    void unsetAmount();
    void setAmount(double value);
    /// <summary>
    /// 
    /// </summary>
    double getMinAmount() const;
    bool minAmountIsSet() const;
    void unsetMinAmount();
    void setMinAmount(double value);
    /// <summary>
    /// 
    /// </summary>
    double getThreshold() const;
    bool thresholdIsSet() const;
    void unsetThreshold();
    void setThreshold(double value);
    /// <summary>
    /// 
    /// </summary>
    double getMmRatioMarginCall() const;
    bool mmRatioMarginCallIsSet() const;
    void unsetMmRatioMarginCall();
    void setMmRatioMarginCall(double value);
    /// <summary>
    /// 
    /// </summary>
    double getMmRatioLiquidation() const;
    bool mmRatioLiquidationIsSet() const;
    void unsetMmRatioLiquidation();
    void setMmRatioLiquidation(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStartTime() const;
    bool startTimeIsSet() const;
    void unsetStartTime();
    void setStartTime(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMaturityTime() const;
    bool maturityTimeIsSet() const;
    void unsetMaturityTime();
    void setMaturityTime(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMaturityInstruction() const;
    bool maturityInstructionIsSet() const;
    void unsetMaturityInstruction();
    void setMaturityInstruction(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCsaStatus() const;
    bool csaStatusIsSet() const;
    void unsetCsaStatus();
    void setCsaStatus(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRequester() const;
    bool requesterIsSet() const;
    void unsetRequester();
    void setRequester(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClientDetails() const;
    bool clientDetailsIsSet() const;
    void unsetClientDetails();
    void setClientDetails(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getText() const;
    bool textIsSet() const;
    void unsetText();
    void setText(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTimestamp() const;
    bool timestampIsSet() const;
    void unsetTimestamp();
    void setTimestamp(utility::string_t value);

protected:
    utility::string_t m_CsaID;
        double m_Account;
    bool m_AccountIsSet;
    utility::string_t m_Currency;
    bool m_CurrencyIsSet;
    double m_Amount;
    bool m_AmountIsSet;
    double m_MinAmount;
    bool m_MinAmountIsSet;
    double m_Threshold;
    bool m_ThresholdIsSet;
    double m_MmRatioMarginCall;
    bool m_MmRatioMarginCallIsSet;
    double m_MmRatioLiquidation;
    bool m_MmRatioLiquidationIsSet;
    utility::string_t m_StartTime;
    bool m_StartTimeIsSet;
    utility::string_t m_MaturityTime;
    bool m_MaturityTimeIsSet;
    utility::string_t m_MaturityInstruction;
    bool m_MaturityInstructionIsSet;
    utility::string_t m_CsaStatus;
    bool m_CsaStatusIsSet;
    utility::string_t m_Requester;
    bool m_RequesterIsSet;
    utility::string_t m_ClientDetails;
    bool m_ClientDetailsIsSet;
    utility::string_t m_Text;
    bool m_TextIsSet;
    utility::string_t m_Timestamp;
    bool m_TimestampIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_CollateralSupportAgreement_H_ */

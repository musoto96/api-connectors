/*
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * NetworksConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-11-29T15:37:13.208+08:00")
public class NetworksConfig {
  @SerializedName("network")
  private String network = "eth";

  @SerializedName("name")
  private String name = "Ethereum";

  @SerializedName("currency")
  private String currency = "Gwei";

  @SerializedName("networkSymbol")
  private String networkSymbol = "ETH";

  @SerializedName("transactionExplorer")
  private String transactionExplorer = "https://etherscan.io/tx/";

  @SerializedName("tokenExplorer")
  private String tokenExplorer = "https://etherscan.io/token/";

  @SerializedName("depositConfirmations")
  private BigDecimal depositConfirmations = null;

  @SerializedName("enabled")
  private Boolean enabled = true;

  public NetworksConfig network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(required = true, value = "")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public NetworksConfig name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NetworksConfig currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public NetworksConfig networkSymbol(String networkSymbol) {
    this.networkSymbol = networkSymbol;
    return this;
  }

   /**
   * Get networkSymbol
   * @return networkSymbol
  **/
  @ApiModelProperty(value = "")
  public String getNetworkSymbol() {
    return networkSymbol;
  }

  public void setNetworkSymbol(String networkSymbol) {
    this.networkSymbol = networkSymbol;
  }

  public NetworksConfig transactionExplorer(String transactionExplorer) {
    this.transactionExplorer = transactionExplorer;
    return this;
  }

   /**
   * Get transactionExplorer
   * @return transactionExplorer
  **/
  @ApiModelProperty(value = "")
  public String getTransactionExplorer() {
    return transactionExplorer;
  }

  public void setTransactionExplorer(String transactionExplorer) {
    this.transactionExplorer = transactionExplorer;
  }

  public NetworksConfig tokenExplorer(String tokenExplorer) {
    this.tokenExplorer = tokenExplorer;
    return this;
  }

   /**
   * Get tokenExplorer
   * @return tokenExplorer
  **/
  @ApiModelProperty(value = "")
  public String getTokenExplorer() {
    return tokenExplorer;
  }

  public void setTokenExplorer(String tokenExplorer) {
    this.tokenExplorer = tokenExplorer;
  }

  public NetworksConfig depositConfirmations(BigDecimal depositConfirmations) {
    this.depositConfirmations = depositConfirmations;
    return this;
  }

   /**
   * Get depositConfirmations
   * @return depositConfirmations
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDepositConfirmations() {
    return depositConfirmations;
  }

  public void setDepositConfirmations(BigDecimal depositConfirmations) {
    this.depositConfirmations = depositConfirmations;
  }

  public NetworksConfig enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworksConfig networksConfig = (NetworksConfig) o;
    return Objects.equals(this.network, networksConfig.network) &&
        Objects.equals(this.name, networksConfig.name) &&
        Objects.equals(this.currency, networksConfig.currency) &&
        Objects.equals(this.networkSymbol, networksConfig.networkSymbol) &&
        Objects.equals(this.transactionExplorer, networksConfig.transactionExplorer) &&
        Objects.equals(this.tokenExplorer, networksConfig.tokenExplorer) &&
        Objects.equals(this.depositConfirmations, networksConfig.depositConfirmations) &&
        Objects.equals(this.enabled, networksConfig.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network, name, currency, networkSymbol, transactionExplorer, tokenExplorer, depositConfirmations, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworksConfig {\n");
    
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    networkSymbol: ").append(toIndentedString(networkSymbol)).append("\n");
    sb.append("    transactionExplorer: ").append(toIndentedString(transactionExplorer)).append("\n");
    sb.append("    tokenExplorer: ").append(toIndentedString(tokenExplorer)).append("\n");
    sb.append("    depositConfirmations: ").append(toIndentedString(depositConfirmations)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


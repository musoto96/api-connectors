/*
 * BitMEX API
 * ## REST API for the BitMEX Trading Platform  _If you are building automated tools, please subscribe to the_ _[BitMEX API RSS Feed](https://blog.bitmex.com/api_announcement/feed/) for changes. The feed will be updated_ _regularly and is the most reliable way to get downtime and update announcements._  [View Changelog](/app/apiChangelog)  -  #### Getting Started  Base URI: [https://www.bitmex.com/api/v1](/api/v1)  ##### Fetching Data  All REST endpoints are documented below. You can try out any query right from this interface.  Most table queries accept `count`, `start`, and `reverse` params. Set `reverse=true` to get rows newest-first.  Additional documentation regarding filters, timestamps, and authentication is available in [the main API documentation](/app/restAPI).  _All_ table data is available via the [Websocket](/app/wsAPI). We highly recommend using the socket if you want to have the quickest possible data without being subject to ratelimits.  ##### Return Types  By default, all data is returned as JSON. Send `?_format=csv` to get CSV data or `?_format=xml` to get XML data.  ##### Trade Data Queries  _This is only a small subset of what is available, to get you started._  Fill in the parameters and click the `Try it out!` button to try any of these queries.  - [Pricing Data](#!/Quote/Quote_get)  - [Trade Data](#!/Trade/Trade_get)  - [OrderBook Data](#!/OrderBook/OrderBook_getL2)  - [Settlement Data](#!/Settlement/Settlement_get)  - [Exchange Statistics](#!/Stats/Stats_history)  Every function of the BitMEX.com platform is exposed here and documented. Many more functions are available.  ##### Swagger Specification  [â‡© Download Swagger JSON](swagger.json)  -  ## All API Endpoints  Click to expand a section. 
 *
 * OpenAPI spec version: 1.2.0
 * Contact: support@bitmex.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AssetsConfigNetworkItem;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AssetsConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-11-29T15:37:13.208+08:00")
public class AssetsConfig {
  @SerializedName("asset")
  private String asset = "XBT";

  @SerializedName("currency")
  private String currency = "XBt";

  @SerializedName("majorCurrency")
  private String majorCurrency = "XBT";

  @SerializedName("name")
  private String name = "Bitcoin";

  @SerializedName("currencyType")
  private String currencyType = "Crypto";

  @SerializedName("scale")
  private Double scale = 8.0d;

  @SerializedName("enabled")
  private Boolean enabled = true;

  @SerializedName("isMarginCurrency")
  private Boolean isMarginCurrency = true;

  @SerializedName("networks")
  private List<AssetsConfigNetworkItem> networks = null;

  public AssetsConfig asset(String asset) {
    this.asset = asset;
    return this;
  }

   /**
   * Get asset
   * @return asset
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAsset() {
    return asset;
  }

  public void setAsset(String asset) {
    this.asset = asset;
  }

  public AssetsConfig currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public AssetsConfig majorCurrency(String majorCurrency) {
    this.majorCurrency = majorCurrency;
    return this;
  }

   /**
   * Get majorCurrency
   * @return majorCurrency
  **/
  @ApiModelProperty(value = "")
  public String getMajorCurrency() {
    return majorCurrency;
  }

  public void setMajorCurrency(String majorCurrency) {
    this.majorCurrency = majorCurrency;
  }

  public AssetsConfig name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AssetsConfig currencyType(String currencyType) {
    this.currencyType = currencyType;
    return this;
  }

   /**
   * Get currencyType
   * @return currencyType
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyType() {
    return currencyType;
  }

  public void setCurrencyType(String currencyType) {
    this.currencyType = currencyType;
  }

  public AssetsConfig scale(Double scale) {
    this.scale = scale;
    return this;
  }

   /**
   * Get scale
   * @return scale
  **/
  @ApiModelProperty(value = "")
  public Double getScale() {
    return scale;
  }

  public void setScale(Double scale) {
    this.scale = scale;
  }

  public AssetsConfig enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public AssetsConfig isMarginCurrency(Boolean isMarginCurrency) {
    this.isMarginCurrency = isMarginCurrency;
    return this;
  }

   /**
   * Get isMarginCurrency
   * @return isMarginCurrency
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsMarginCurrency() {
    return isMarginCurrency;
  }

  public void setIsMarginCurrency(Boolean isMarginCurrency) {
    this.isMarginCurrency = isMarginCurrency;
  }

  public AssetsConfig networks(List<AssetsConfigNetworkItem> networks) {
    this.networks = networks;
    return this;
  }

  public AssetsConfig addNetworksItem(AssetsConfigNetworkItem networksItem) {
    if (this.networks == null) {
      this.networks = new ArrayList<AssetsConfigNetworkItem>();
    }
    this.networks.add(networksItem);
    return this;
  }

   /**
   * Get networks
   * @return networks
  **/
  @ApiModelProperty(value = "")
  public List<AssetsConfigNetworkItem> getNetworks() {
    return networks;
  }

  public void setNetworks(List<AssetsConfigNetworkItem> networks) {
    this.networks = networks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetsConfig assetsConfig = (AssetsConfig) o;
    return Objects.equals(this.asset, assetsConfig.asset) &&
        Objects.equals(this.currency, assetsConfig.currency) &&
        Objects.equals(this.majorCurrency, assetsConfig.majorCurrency) &&
        Objects.equals(this.name, assetsConfig.name) &&
        Objects.equals(this.currencyType, assetsConfig.currencyType) &&
        Objects.equals(this.scale, assetsConfig.scale) &&
        Objects.equals(this.enabled, assetsConfig.enabled) &&
        Objects.equals(this.isMarginCurrency, assetsConfig.isMarginCurrency) &&
        Objects.equals(this.networks, assetsConfig.networks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asset, currency, majorCurrency, name, currencyType, scale, enabled, isMarginCurrency, networks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetsConfig {\n");
    
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    majorCurrency: ").append(toIndentedString(majorCurrency)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    currencyType: ").append(toIndentedString(currencyType)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    isMarginCurrency: ").append(toIndentedString(isMarginCurrency)).append("\n");
    sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

